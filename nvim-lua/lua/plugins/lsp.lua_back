return {

  {
    "williamboman/mason.nvim",
    cmd = { "Mason", "MasonInstall", "MasonUpdate" },
    opts = function()
      return require "plugins.configs.mason"
    end,
    config = function(_, opts)
      require("mason").setup(opts)
    end
  },

  {
    "williamboman/mason-lspconfig.nvim",
    event = { "BufReadPre", "BufNewFile" },
    dependencies = { "williamboman/mason.nvim" },
    config = function(_, opts)
      local mlsp = require("mason-lspconfig")
      mlsp.setup {
        ensure_installed =  { 
          "lua_ls",
          'pyright',
        },
      }
    end,
    
  },
  {
    "neovim/nvim-lspconfig",
    config = function(_, opts)
      local lspconfig = require("lspconfig")
      local M = require("plugins.configs.lspconfig")
      lspconfig.lua_ls.setup {
        on_attach = M.on_attach,
        capabilities = M.capabilities,
        settings = {
          Lua = {
            diagnostics = {
              globals = { "vim" },
            },
            workspace = {
              library = {
                [vim.fn.expand "$VIMRUNTIME/lua"] = true,
                [vim.fn.expand "$VIMRUNTIME/lua/vim/lsp"] = true,
                -- [vim.fn.stdpath "data" .. "/lazy/lazy.nvim/lua/lazy"] = true,
              },
              maxPreload = 100000,
              preloadFileSize = 10000,
            },
          },
        },
      }

      lspconfig.pyright.setup {}
    end,
	},
-- null-ls
  {
    "nvimtools/none-ls.nvim",
    enabled = false,
    -- dev = true,
    opts = function(_, opts)
      local nls = require("null-ls")
      vim.list_extend(opts.sources, {
      })
    end,
  },


}
